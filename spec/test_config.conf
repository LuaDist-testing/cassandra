worker_processes  1;
error_log  logs/error.log;
pid        logs/nginx.pid;
worker_rlimit_nofile 8192;

events {
  worker_connections  1024;
}

http {
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log   logs/access.log  main;

  lua_package_path 'lib/?.lua;;';

  server {
    listen       8080;

    location / {
      content_by_lua '
        local cassandra = require("cassandra")
        local cql = cassandra.new()
        cql:set_timeout(1000) -- 1 sec
        local ok, err = cql:connect("127.0.0.1", 9042)
        if not ok then
          ngx.say("failed to connect: ", err)
          return
        end
        local rows, err = cql:execute("select cql_version, native_protocol_version, release_version from system.local");
        if not rows then
          ngx.say("failed to query: ", err)
          return
        end
        local result = rows[1]
        ngx.say("cql_version: " .. result.cql_version)
        ngx.say("native_protocol_version: " .. result.native_protocol_version)
        ngx.say("release_version: " .. result.release_version)
      ';
    }
  }
}